#version: '3.1'
#services:
#  API:
#    image: 'back.jar'
#    ports:
#      - "8080:8080"
#    depends_on:
#      PostgreSQL:
#        condition: service_healthy
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=password
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#
#  PostgreSQL:
#    image: postgres
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_USER=postgres
#      - POSTGRES_DB=postgres
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

version: '3'

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile
    image: back
#    command: java -Djava.security.edg=file:/dev/./urandom -jar /app.jar
    ports:
      - "8080:8080"
    depends_on:
      - PostgreSQL
#        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - application

  PostgreSQL:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - database:/var/lib/postgres
    networks:
      - application
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

volumes:
  database:

networks:
  application:
    driver: bridge